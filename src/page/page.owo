<template lang="pug">
.home.clear
  plug(_name="module6" _src="http://lamp.run:8082/504bcad8da1a28e9.owo")
  .owo.fl.left-panel
    .select-box
    h2 选择图表类型
    select#dataType
      option(value="funnel") 漏斗图
      option(value="radar") 雷达图
      option(value="line") 折线图
      option(value="bar") 柱状图
      option(value="scatter") 散点图
      option(value="rose") 玫瑰图
      option(value="pie") 饼状图
      option(value="bar2") 正负条形图
      option(value="category") 极坐标柱状图
    h2 选择颜色风格
    select#dataType
      option(value="[]") 默认风格
      option(value="['#b0222e','#f0cb7a','#f9d895']") 风格1
    h2 导入数据
    .panel
      .mini-button(o-tap="down") 下载图例
      .mini-button
        span 导入数据
        input#fileUp(type="file")
    textarea.data-textbox
    h2 图表宽度
    input.chart-width(type="number" value="600")
    h2 图表高度
    input.chart-height(type="number" value="600")
    .owo.button(o-tap="createdChart") 生成图表
  .fr
    .chart-box
      #chart
    .bottom-bar.clear
      .owo.owo-lable
  .select-pannel.clear
    .item.fl
      img(src="@|funnel.png|" o-tap="selectItem('funnel', 'mockData2')")
      p 漏斗图
    .item.fl
      img(src="@|radar.png|" o-tap="selectItem('radar', 'mockData1')")
      p 雷达图
    .item.fl
      img(src="@|line.png|" o-tap="selectItem('line', 'mockData4')")
      p 折线图
    .item.fl
      img(src="@|bar.png|" o-tap="selectItem('bar', 'mockData4')")
      p 柱状图
    .item.fl
      img(src="@|scatter.png|" o-tap="selectItem('scatter', 'mockData3')")
      p 散点图
    .item.fl
      img(src="@|rose.png|" o-tap="selectItem('rose', 'mockData2')")
      p 玫瑰图
    .item.fl
      img(src="@|pie.png|" o-tap="selectItem('pie', 'mockData2')")
      p 饼状图  
    .item.fl
      img(src="@|bar2.png|" o-tap="selectItem('bar2', 'mockData5')")
      p 正负条形图
    .item.fl
      img(src="@|category.png|" o-tap="selectItem('category', 'mockData2')")
      p 极坐标柱状图
</template>

<script>
  module.exports = {
    data: {
      myChart: null
    },
    created: function () {
      const input = document.querySelector('#fileUp');
      document.querySelector('.title-bar').setAttribute('step', 2)
      input.addEventListener('input', ()=> {
          const inputFile = input.files[0];
          if (inputFile) {
              const reader = new FileReader();
              let resultFile = input.files[0]
              //获得本地的图片地址  放在reader.result内
              // 读取纯文本文件,且编码格式为 utf-8
              reader.readAsText(resultFile, 'UTF-8')
              
              // 读取文件,会触发 onload 异步事件,可使用回调函数 来获取最终的值.
              reader.onload = (e) => {
                let fileContent = e.target.result
                document.querySelector('.data-textbox').value = fileContent
              }
          }
      })
    },
    createdChart: function () {
      const fileData = document.querySelector('.data-textbox').value
      const typeTemp = document.querySelector('#dataType').value
      switch (typeTemp) {
        case 'radar':
          this.init(radarHandle(fileData))
          break;
        case 'funnel':
          this.init(funnelHandle(fileData))
          break;
        case 'line':
          this.init(lineHandle(fileData))
          break;
        case 'bar':
          this.init(barHandle(fileData))
          break;
        case 'scatter':
          this.init(scatterHandle(fileData))
          break;
        case 'rose':
          this.init(roseHandle(fileData))
          break;
        case 'pie':
          this.init(pieHandle(fileData))
          break;
        case 'bar2':
          this.init(bar2Handle(fileData))
          break;
        case 'category':
          this.init(categoryHandle(fileData))
          break;
        default:
          break;
      }      
    },
    down: function () {
      const typeTemp = document.querySelector('#dataType').value
      switch (typeTemp) {
        case 'radar':
          window.open('https://cunchu.site/mock/chart_csv/%E9%9B%B7%E8%BE%BE%E5%9B%BE.csv')
          break;
        case 'funnel':
          window.open('https://cunchu.site/mock/chart_csv/%E6%BC%8F%E6%96%97%E5%9B%BE.csv')
          break;
        default:
          break;
      }
    },
    init: function (option) {
      if (this.data.myChart) {
        this.data.myChart.dispose()
        this.data.myChart = null
      }
      var chartDom = document.getElementById('chart');
      chartDom.style.width = document.querySelector('.chart-width').value + 'px'
      chartDom.style.height = document.querySelector('.chart-height').value + 'px'
      this.data.myChart = echarts.init(chartDom);

      option && this.data.myChart.setOption(option);
    },
    selectItem: function (item, mockData) {
      document.querySelector('#dataType').value = item
      document.querySelector('.select-pannel').style.display = 'none'
      document.querySelector('.data-textbox').value = window[mockData]
      setTimeout(() => {
        this.createdChart()
      }, 0);
      document.querySelector('.home .title-bar').setAttribute('step', 2)
    }
  }
</script>


<style lang="less">
.home {
  width: 100%;
  height: 100%;
}
#chart {
  width: 600px;
  height: 600px;
}
.fr {
  width: calc(100% - 340px);
  height: calc(100% - 60px);
  margin-top: 60px;
}
.owo.fl {
  width: 340px;
  height: calc(100% - 60px);
  overflow: auto;
}
.owo textarea.data-textbox {
  height: 330px;
  font-size: 14px;
  line-height: 20px;
}
.left-panel {
  border-right: 1px solid #ccc;
  margin-top: 60px;
}
.chart-box {
  height: calc(100% - 41px);
  display: flex;
  justify-content: center;
  align-items: center;
}
.bottom-bar {
  height: 40px;
  border-top: 1px solid #ccc;
  display: flex;
  justify-content: right;
  padding: 0 10px;
}
.select-pannel {
  position: fixed;
  width: 100%;
  height: calc(100% - 60px);
  background-color: white;
  padding: 20px;
  overflow: auto;
  margin-top: 60px;
  .item {
    width: 290px;
    margin: 10px;
    padding: 10px 30px;
    cursor: pointer;
    box-shadow: 1px 1px 5px #ccc;
    border-radius: 5px;
    background-color: #fbfafa;
    img {
      width: 230px;
      height: 230px;
      display: block;
    }
    p {
      font-size: 18px;
      text-align: center;
      line-height: 26px;
      display: block;
    }
  }
  .item:hover {
    background-color: #fff6f6;
  }
}

.title-bar {
  overflow: hidden;
  background-color: #ffffff;
  position: fixed;
  top: 0;
  height: 60px;
  width: 100%;
  z-index: 99;
  box-shadow: 1px 1px 13px #ccc;
}
.title-bar .content {
  display: none;
}
.title-bar[step="1"] .steep {
  right: auto;
  left: 30px;
}
.mini-button {
  display: inline-block;
  background-color: #009fe9;
  color: white;
  width: 80px;
  font-size: 14px;
  line-height: 30px;
  text-align: center;
  border-radius: 5px;
  margin-right: 10px;
  position: relative;
  input {
    position: absolute;
    opacity: 0;
    width: 100%;
    height: 100%;
    left: 0;
  }
}
.dc-button {
  position: absolute;
  right: 10px;
  top: 14px;
  z-index: 99;
  background-color: #009fe9;
  color: white;
  width: 100px;
  line-height: 35px;
  text-align: center;
  font-size: 16px;
  border-radius: 10px;
  box-shadow: 1px 1px 3px #ccc;
}

</style>
