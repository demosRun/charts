<template lang="pug">
.home.clear
  .owo.fl.left-panel
    .select-box
    h2 选择图表类型
    select#dataType
      option(value="funnel") 漏斗图
      option(value="radar") 雷达图
      option(value="line") 折线图
      option(value="bar") 柱状图
      option(value="scatter") 散点图
    h2 选择颜色风格
    select#dataType
      option(value="[]") 默认风格
      option(value="['#b0222e','#f0cb7a','#f9d895']") 风格1
    h2 导入数据
    .panel
      .down(o-tap="down") 点击下载
      input#fileUp(type="file")
    textarea.data-textbox
    h2 图表宽度
    input.chart-width(type="number" value="800")
    h2 图表高度
    input.chart-height(type="number" value="800")
    .owo.button(o-tap="createdChart") 生成图表
  .fr
    .chart-box
      #chart
    .bottom-bar.clear
      .owo.owo-lable
</template>

<script>
  module.exports = {
    data: {
      myChart: null
    },
    created: function () {
      const input = document.querySelector('#fileUp');

      input.addEventListener('input', ()=> {
          const inputFile = input.files[0];
          if (inputFile) {
              const reader = new FileReader();
              let resultFile = input.files[0]
              //获得本地的图片地址  放在reader.result内
              // 读取纯文本文件,且编码格式为 utf-8
              reader.readAsText(resultFile, 'UTF-8')
              
              // 读取文件,会触发 onload 异步事件,可使用回调函数 来获取最终的值.
              reader.onload = (e) => {
                let fileContent = e.target.result
                document.querySelector('.data-textbox').value = fileContent
              }
          }
      })
    },
    createdChart: function () {
      const fileData = document.querySelector('.data-textbox').value
      const typeTemp = document.querySelector('#dataType').value
      switch (typeTemp) {
        case 'radar':
          this.init(radarHandle(fileData))
          break;
        case 'funnel':
          this.init(funnelHandle(fileData))
          break;
        case 'line':
          this.init(lineHandle(fileData))
          break;
        case 'bar':
          this.init(barHandle(fileData))
          break;
        case 'scatter':
          this.init(scatterHandle(fileData))
          break;
        default:
          break;
      }      
    },
    down: function () {
      const typeTemp = document.querySelector('#dataType').value
      switch (typeTemp) {
        case 'radar':
          window.open('https://cunchu.site/mock/chart_csv/%E9%9B%B7%E8%BE%BE%E5%9B%BE.csv')
          break;
        case 'funnel':
          window.open('https://cunchu.site/mock/chart_csv/%E6%BC%8F%E6%96%97%E5%9B%BE.csv')
          break;
        default:
          break;
      }
    },
    init: function (option) {
      if (this.data.myChart) {
        this.data.myChart.dispose()
        this.data.myChart = null
      }
      var chartDom = document.getElementById('chart');
      chartDom.style.width = document.querySelector('.chart-width').value + 'px'
      chartDom.style.height = document.querySelector('.chart-height').value + 'px'
      this.data.myChart = echarts.init(chartDom);

      option && this.data.myChart.setOption(option);
    }
  }
</script>


<style lang="less">
.home {
  width: 100%;
  height: 100%;
}
#chart {
  width: 600px;
  height: 600px;
}
.fr {
  width: calc(100% - 340px);
  height: 100%;
}
.owo.fl {
  width: 340px;
  height: 100%;
}
.owo textarea.data-textbox {
  height: 330px;
  font-size: 14px;
  line-height: 20px;
}
.left-panel {
  border-right: 1px solid #ccc;
}
.chart-box {
  height: calc(100% - 41px);
  display: flex;
  justify-content: center;
  align-items: center;
}
.bottom-bar {
  height: 40px;
  border-top: 1px solid #ccc;
  display: flex;
  justify-content: right;
  padding: 0 10px;
}
</style>
